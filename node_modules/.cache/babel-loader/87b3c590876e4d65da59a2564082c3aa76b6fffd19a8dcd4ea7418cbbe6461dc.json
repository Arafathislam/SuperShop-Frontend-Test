{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';const apiUrl=process.env.REACT_APP_API;export const userAuthApi=createApi({reducerPath:'userAuthApi',baseQuery:fetchBaseQuery({baseUrl:\"http://localhost:8001/api/\"}),endpoints:builder=>({registerUser:builder.mutation({query:user=>{return{url:'user/register',method:'POST',body:user,headers:{'Content-type':'application/json'}};}}),loginUser:builder.mutation({query:user=>{return{url:'user/login',method:'POST',body:user,headers:{'Content-type':'application/json'}};}}),sendPasswordResetEmail:builder.mutation({query:user=>{return{url:'user/resetemail',method:'POST',body:user,headers:{'Content-type':'application/json'}};}}),resetPassword:builder.mutation({query:_ref=>{let{actualData,id,token}=_ref;return{url:\"user/reset-password/\".concat(id,\"/\").concat(token),method:'POST',body:actualData,headers:{'Content-type':'application/json'}};}}),getLoggedUser:builder.query({query:token=>{return{url:\"user/loggeduser\",method:'GET',headers:{'authorization':\"Bearer \".concat(token)}};}}),// change user password\nchangeUserPassword:builder.mutation({query:_ref2=>{let{actualData,token}=_ref2;return{url:'user/cnpsw',method:'POST',body:actualData,headers:{'authorization':\"Bearer \".concat(token)}};}}),/// admin register\nregisterAdmin:builder.mutation({query:user=>{return{url:'admin/register/psw/screct',method:'POST',body:user,headers:{'Content-type':'application/json'}};}}),// login admin\nloginAdmin:builder.mutation({query:user=>{return{url:'admin/',method:'POST',body:user,headers:{'Content-type':'application/json'}};}}),// change password admin\nchangeAdminPassword:builder.mutation({query:_ref3=>{let{actualData,token}=_ref3;return{url:'admin/cnpsw',method:'POST',body:actualData,headers:{'authorization':\"Bearer \".concat(token)}};}})// code before here\n})});export const{useRegisterUserMutation,useLoginUserMutation,useSendPasswordResetEmailMutation,useResetPasswordMutation,useGetLoggedUserQuery,useChangeUserPasswordMutation,useLoginAdminMutation,useRegisterAdminMutation,useChangeAdminPasswordMutation}=userAuthApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiUrl","process","env","REACT_APP_API","userAuthApi","reducerPath","baseQuery","baseUrl","endpoints","builder","registerUser","mutation","query","user","url","method","body","headers","loginUser","sendPasswordResetEmail","resetPassword","_ref","actualData","id","token","concat","getLoggedUser","changeUserPassword","_ref2","registerAdmin","loginAdmin","changeAdminPassword","_ref3","useRegisterUserMutation","useLoginUserMutation","useSendPasswordResetEmailMutation","useResetPasswordMutation","useGetLoggedUserQuery","useChangeUserPasswordMutation","useLoginAdminMutation","useRegisterAdminMutation","useChangeAdminPasswordMutation"],"sources":["/media/arafath/New Volume/Final Year Project/inventory-frontend/src/services/userAuthApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nconst apiUrl = process.env.REACT_APP_API;\nexport const userAuthApi = createApi({\n  reducerPath: 'userAuthApi',\n  baseQuery: fetchBaseQuery({ baseUrl: `http://localhost:8001/api/` }),\n\n  endpoints: (builder) => ({\n\n    registerUser: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'user/register',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n\n    loginUser: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'user/login',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    sendPasswordResetEmail: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'user/resetemail',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    resetPassword: builder.mutation({\n      query: ({ actualData, id, token }) => {\n        return {\n          url: `user/reset-password/${id}/${token}`,\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    getLoggedUser: builder.query({\n      query: (token) => {\n        return {\n          url: `user/loggeduser`,\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${token}`,\n          }\n        }\n      }\n    }),\n\n    // change user password\n    changeUserPassword: builder.mutation({\n      query: ({ actualData, token }) => {\n        return {\n          url: 'user/cnpsw',\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'authorization': `Bearer ${token}`,\n          }\n        }\n      }\n    }),\n\n\n    /// admin register\n    registerAdmin: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'admin/register/psw/screct',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n\n// login admin\n    loginAdmin: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'admin/',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n\n// change password admin\n\nchangeAdminPassword: builder.mutation({\n  query: ({ actualData, token }) => {\n    return {\n      url: 'admin/cnpsw',\n      method: 'POST',\n      body: actualData,\n      headers: {\n        'authorization': `Bearer ${token}`,\n      }\n    }\n  }\n}),\n\n\n\n\n\n\n\n\n\n\n\n\n    // code before here\n\n  }),\n\n\n\n\n})\n\nexport const { useRegisterUserMutation, useLoginUserMutation, useSendPasswordResetEmailMutation, useResetPasswordMutation, useGetLoggedUserQuery, useChangeUserPasswordMutation,useLoginAdminMutation,useRegisterAdminMutation,useChangeAdminPasswordMutation } = userAuthApi"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}