{"ast":null,"code":"import React from'react';import{Navigate,useLocation,Outlet,useNavigate}from\"react-router-dom\";import{getToken}from'../services/LocalStorageService.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const UserProtect=()=>{let token=getToken('token');let isLoggedIn=token?true:false;let location=useLocation();if(isLoggedIn){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Outlet,{})});}return/*#__PURE__*/_jsx(Navigate,{to:\"/\",state:{from:location}});};export default UserProtect;","map":{"version":3,"names":["React","Navigate","useLocation","Outlet","useNavigate","getToken","jsx","_jsx","Fragment","_Fragment","UserProtect","token","isLoggedIn","location","children","to","state","from"],"sources":["/media/arafath/New Volume/Final Year Project/inventory-frontend/src/protectedRoute/UserProtect.js"],"sourcesContent":["import React from 'react'\nimport { Navigate, useLocation, Outlet, useNavigate } from \"react-router-dom\";\nimport {getToken} from '../services/LocalStorageService.js';\nconst UserProtect = () => {\n  let token =getToken('token');\n  let isLoggedIn=token? true:false\n  let location = useLocation();\n  \n  \n      if(isLoggedIn){\n        return (\n            <>\n         \n              <Outlet />\n            </>\n          );\n    }\n \n      return <Navigate to=\"/\" state={{ from: location }} />;\n\n  \n}\n\nexport default UserProtect\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,CAAEC,MAAM,CAAEC,WAAW,KAAQ,kBAAkB,CAC7E,OAAQC,QAAQ,KAAO,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAC5D,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAI,CAAAC,KAAK,CAAEN,QAAQ,CAAC,OAAO,CAAC,CAC5B,GAAI,CAAAO,UAAU,CAACD,KAAK,CAAE,IAAI,CAAC,KAAK,CAChC,GAAI,CAAAE,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAGxB,GAAGU,UAAU,CAAC,CACZ,mBACIL,IAAA,CAAAE,SAAA,EAAAK,QAAA,cAEEP,IAAA,CAACJ,MAAM,GAAE,CAAC,CACV,CAAC,CAEX,CAEE,mBAAOI,IAAA,CAACN,QAAQ,EAACc,EAAE,CAAC,GAAG,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEJ,QAAS,CAAE,CAAE,CAAC,CAG3D,CAAC,CAED,cAAe,CAAAH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}